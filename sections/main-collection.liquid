{% liquid
  for filter in collection.filters
    assign total_active_values = total_active_values | plus: filter.active_values.size
  endfor
%}

<div x-data="{ largeView: true, mainFilter: 'All', toggleView(b) {  this.largeView = b }, {% for filter in collection.filters %}{{ filter.label | handle }}: '{{ filter.active_values[0].label }}', {% endfor %}  }" class="page-width">
  <div class="py-10 visually-hidden">
    <p class="text-oracle-18 opacity-60">
      <a href="{{ settings.shop_all_link }}">Shop</a> > 
      <span>{{ collection.title }}</span>
    </p>
    {% comment %} <h1 class="mt-20 text-m-h2 font-bold md:mt-60 md:text-arizona-72">{{ collection.title }}</h1> {% endcomment %}
  </div>

  {% render 'filters', main_filters: section.settings.main_filter, section_settings: section.settings, blocks: section.blocks %}

  <div id="product-grid">
    {% paginate collection.products by 50 %}
      {% if collection.products.size == 0 %}
        <div class="page-width mt-60 mb-150" data-id="{{ section.id }}">
          <div class="loading-overlay"></div>
          <div class="text-center">
            <p class="mb-20">No products found.</p>
            <a href="{{ collection.url }}" class="button">Clear Filters</a>
          </div>
        </div>
      {% else %}
        <div class="collection mb-50">
          <div class="loading-overlay"></div>

          <ul data-id="{{ section.id }}" class="group/grid grid gap-x-10 gap-y-20 grid-flow-row-dense sm:grid-cols-2 md:gap-y-40" :class="largeView ? 'largeView lg:grid-cols-2' : 'smallView lg:grid-cols-4'">
            {% for product in collection.products %}
              <li class="product-grid-item" data-fade-in-up>
                {% render 'product-card' product_card_product: product %}
              </li>
            {% endfor %}
          </ul>

          {% if paginate.pages > 1 %}
            {% render 'pagination', paginate: paginate, anchor: '' %}
          {% endif %}
        </div>
      {% endif %}
    {% endpaginate %}
  </div>
</div>

{% schema %}
{
  "name": "Collection",
  "settings": [
    {
      "type": "header",
      "content": "Top of page filters"
    },
    {
      "type": "paragraph",
      "content": "All available filter options will be displayed in filter slide-out menu. Only filters entered here will display at the top fo the Collection page. If left blank, no filters will display at the top of the page."
    },
    {
      "type": "text",
      "id": "main_filters",
      "label": "Main filters",
      "info": "Displayed at top of page. Separate values with a single comma."
    },
    {
      "type": "header",
      "content": "Page header"
    },
    {
      "type": "inline_richtext",
      "id": "heading",
      "label": "Text"
    },
    {
      "type": "image_picker",
      "id": "image",
      "label": "Image"
    },
    {
      "type": "paragraph",
      "content": "Add filter groups as blocks"
    }
  ],
  "blocks": [
    {
      "type": "block",
      "name": "Filter info",
      "settings": [
        {
          "type": "paragraph",
          "content": "Displayed at top of page. Separate values with a single comma."
        },
        {
          "type": "text",
          "id": "heading",
          "label": "Filter group",
          "info": "Must match an existing filter label. Example: 'Room', 'Fixture', 'Style' "
        },
        {
          "type": "inline_richtext",
          "id": "title",
          "label": "Text"
        },
        {
          "type": "image_picker",
          "id": "image",
          "label": "Image"
        }
      ]
    }
  ]
}
{% endschema %}
