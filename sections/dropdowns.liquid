<div class="bg-[var(--background)] text-[var(--text)] py-60 lg:py-[86px]" style="{% render "color-variables", color: section.settings.color %}">
    <div x-data="{ open: 1, hovered: 0, toggle(index){ if (this.open == !index ? slideToggle($root.querySelector('.accordion-content')) : ''); this.open = index } }" class="page-width flex flex-col justify-start items-center lg:grid grid-cols-12 gap-[5vw]">
        <div class="lg:col-span-7 w-full" [&.super-active] @mouseleave=" hovered = 0">
            {% if section.settings.heading!= blank %}
                <h6 data-animate class="text-pangram-12 lg:text-pangram-14 leading-[30px] lb-[8px] lg:mb-25">{{ section.settings.heading}}</h6>
            {% endif %}

            {% if section.blocks != blank %}
                <div class="">
                    {% for block in section.blocks %}
                        <div @mouseenter=" hovered = {{ forloop.index }}" class="group/accordion border-b border-brown first-of-type:border-t" :class="open == {{ forloop.index }} ? 'active' : '' " >
                            <button @click="toggle({{ forloop.index }})" class="accordion-header w-full grid grid-cols-[22px,1fr] lg:grid-cols-[max(150px,18vw),_1fr] items-center gap-x-50 py-10  lg:pt-[18px] lg:pb-[22px]">
                                <div class="w-[22px] lg:w-[44px] [&_svg]:w-full">
                                    <svg width="44" height="44" viewBox="0 0 44 44" fill="none" xmlns="http://www.w3.org/2000/svg">
                                        <line vector-effect="non-scaling-stroke" y1="23.5" x2="44" y2="23.5" stroke="currentColor"/>
                                        <line vector-effect="non-scaling-stroke" class="origin-center transition-all opacity-100 group-[.active]/accordion:rotate-90 group-[.active]/accordion:opacity-0" x1="20.5" y1="2.18557e-08" x2="20.5" y2="44" stroke="currentColor"/>
                                    </svg>
                                </div>
                                    
                                <div class="flex flex-col xl:flex-row justify-start xl:justify-between items-start xl:items-center flex-wrap text-left w-full gap-10">
                                    <h4 data-animate class="text-arizona-28 lg:text-arizona-48 whitespace-nowrap peer">{{ block.settings.heading }}</h4>

                                    {% if block.settings.button_label != blank and block.settings.button_link != blank %}
                                        <div class="hidden lg:group-[.active]/accordion:block peer-[:hover_.svg-link]:svg-link-peer-hover">
                                            <a href="{{ block.settings.button_link }}" class="svg-link text-oracle-14 lg:text-oracle-16 leading-[30px] flex flex-row justify-start items-center gap-[9px]">
                                                {{ block.settings.button_label }}
                                                <span>{% render 'link-arrow' %}</span>
                                            </a>
                                        </div>
                                    {% endif %}
                                </div>
                            </button>

                            <div class="accordion-content hidden group-[.active]/accordion:block">
                                <div class="grid grid-cols-[22px,1fr] lg:grid-cols-[max(150px,18vw),_1fr] gap-x-50 lg:pt-30 lg:pb-50">
                                    <div class="col-start-2 flex flex-col justify-start items-start gap-5 max-w-[240px] md:max-w-full md:flex-row">
                                       <div class="flex flex-col justify-start items-start gap-5">
                                            <p class="text-oracle-14 lg:text-oracle-18">
                                                {{ block.settings.text }}
                                            </p>

                                            {% if block.settings.button_label != blank and block.settings.button_link != blank %}
                                                <a href="{{ block.settings.button_link }}" class="svg-link text-oracle-14 lg:text-oracle-16 leading-[30px] lg:hidden flex flex-row justify-start items-center gap-[9px]">
                                                    {{ block.settings.button_label }}
                                                    <span>{% render 'link-arrow' %}</span>
                                                </a>
                                            {% endif %}
                                        </div>

                                        {% if block.settings.image != blank %}
                                            <div class="block lg:hidden w-full h-auto aspect-[0.93/1] rounded-[10px] overflow-hidden relative mt-10 mb-30">
                                                {% if block.settings.image != blank %}
                                                    {{ block.settings.image | image_url: width: 1000 | image_tag: class: 'w-full h-full object-cover inset'  }}
                                                {% endif %}
                                            </div>
                                        {% endif %}
                                    </div>
                                </div>
                            </div>
                        </div>
                    {% endfor %}
                </div>
            {% endif %}
        </div>

        <div class="col-span-5 hidden lg:flex flex-col justify-center items-center relative">
            {% if section.blocks != blank %}
                <div class="w-full h-auto aspect-[0.93/1] rounded-[10px] overflow-hidden relative ">
                    {% for block in section.blocks %}
                        {% if block.settings.image != blank %}
                            <div class="inset opacity-0 scale-105 delay-300 z-[3] [&.active]:z-[2] [&.active]:opacity-100 [&.active]:scale-100 [&.super-active]:delay-0 [&.super-active]:scale-100 [&.super-active]:z-[3] [&.super-active]:opacity-100 transition-[transform,opacity]" :class="{ 'active': open == {{ forloop.index }}, 'super-active': hovered == {{ forloop.index }} }">
                            {{ block.settings.image | image_url: width: 1000 | image_tag: class: 'w-full h-full object-cover'  }}
                            </div>
                        {% endif %}
                    {% endfor %}
                </div>
            {% endif %}
        </div>
    </div>
</div>

{% schema %}
    {
        "name": "Dropdowns",
        "settings": [
            {
                "type": "select",
                "id": "color",
                "label": "Section colors",
                "options": [
                    {
                        "label": "Light",
                        "value": "light"
                    },
                    {
                        "label": "Dark",
                        "value": "dark"
                    }
                ],
                "default": "dark"
            },
            {
                "type": "text",
                "id": "heading",
                "label": "Heading"
            }
        ],
        "blocks": [
            {
                "type": "dropdown",
                "name": "Dropdown",
                "settings": [
                    {
                        "type": "text",
                        "id": "heading",
                        "label": "Heading"
                    },
                    {
                        "type": "inline_richtext",
                        "id": "text",
                        "label": "Dropdown content"
                    },
                    {
                        "type": "text",
                        "id": "button_label",
                        "label": "Button Label",
                        "default": "Shop Now"
                    },
                    {
                        "type": "url",
                        "id": "button_link",
                        "label": "Button Link"
                    },
                    {
                        "type": "image_picker",
                        "id": "image",
                        "label": "Image"
                    }
                ]
            }
        ],
        "presets": [
            {
                "name": "Dropdowns"
            }
        ]
    }
{% endschema %}